global proc StubbleCreateUI()
{
	// Create Stubble menu
	global string $gMainWindow;
	setParent $gMainWindow;
	global string $stubbleMainMenu = "stubbleMainMenu";
	menu -label "Stubble" $stubbleMainMenu;
	setParent -menu $stubbleMainMenu;
	menuItem -label "Create Hair" -command "source StubbleCreateHair.mel;";
	menuItem -label "Reset Hair" -command "StubbleResetCommand;";
	menuItem -label "Restore zero sized hair" -command "StubbleReinitCommand;";
	menuItem -divider true;
	menuItem -label "Cut Tool" -command "source StubbleCutTool.mel;";
	menuItem -label "Brush Tool" -command "source StubbleBrushTool.mel;";
	menuItem -label "Brush Tool" -command "source StubbleBrushTool.mel;" -optionBox true;
	menuItem -divider true;
	menuItem -label "Export to Dynamic NURBS" -command "StubbleExportToNURBS; \
												string $name = `StubbleSelectCommand`; \
												string $surface = `connectionInfo -sourceFromDestination ( $name + \".surface\" ) `;\
												string $node = plugNode( $surface );\
												string $parent[] = `listRelatives -p $node`;\
												select -add $parent[ 0 ]; \
												MakeCurvesDynamic;";
	menuItem -label "Export to NURBS" -command "StubbleExportToNURBS; \
												string $name = `StubbleSelectCommand`; \
												string $surface = `connectionInfo -sourceFromDestination ( $name + \".surface\" ) `;\
												string $node = plugNode( $surface );\
												string $parent[] = `listRelatives -p $node`;\
												select -add $parent[ 0 ]; ";
	menuItem -label "Import from NURBS" -command "StubbleImportNURBS;";
	menuItem -divider true;
	menuItem -label "Update textures" -command "StubbleResetTextures;refresh;";
	menuItem -label "Textures properties" -command "source StubbleTextureProperties.mel;";

	menuItem -divider true;
	menuItem -label "Prepare for mental ray rendering" -command "StubblePrepareForMentalRayCommand;";

	// Create Stubble select menu
	setParent $gMainWindow;
	global string $stubbleSelectMenu = "stubbleSelectMenu";
	menu -label "Stubble select" -postMenuCommand "source StubbleRebuildSelectMenu.mel;" $stubbleSelectMenu;

	setParent $gMainWindow;

	// Create Stubble cut tool
	if ( !`contextInfo -exists stubbleCutTool` )
	{
		StubbleCutToolCommand stubbleCutTool;
		print ( "Stubble: Created the stubbleCutTool context.\n" );
	}

	// Create Stubble brush tool
	if ( !`contextInfo -exists stubbleBrushTool` )
	{
		StubbleBrushToolCommand stubbleBrushTool;
		print ( "Stubble: Created the stubbleBrushTool context.\n" );
	}

	// Create Stubble haptic settings tool
	if ( !`contextInfo -exists StubbleHapticSettingsToolContext1` )
	{
		StubbleHapticSettingsToolCommand StubbleHapticSettingsToolContext1;
		print ( "Stubble: Created the StubbleHapticSettingsToolContext1 context.\n" );
	}

	// Create Stubble tablet settings tool
	if ( !`contextInfo -exists StubbleTabletSettingsToolContext1` )
	{
		StubbleTabletSettingsToolCommand StubbleTabletSettingsToolContext1;
		print ( "Stubble: Created the StubbleTabletSettingsToolContext1 context.\n" );
	}

	//
	// Shelf
	//
	string $StubbleShelfName = "Stubble";
	int $StubbleShelfNameEx = `layout -q -ex $StubbleShelfName`;
	if ($StubbleShelfNameEx == 1)
	{
		global string $gShelfTopLevel;
		shelfTabLayout -edit -selectTabIndex 1 $gShelfTopLevel; 
		shelfTabChange();
		print ( "Stubble: Deleting current Stubble shelve.\n" );
		deleteUI -layout $StubbleShelfName;
	}

	//add shelf
	print ( "Stubble: Adding new Stubble shelve.\n" );
	$StubbleShelfTab = `addNewShelfTab $StubbleShelfName`;
	
	string $shelfButtons[] = `shelfLayout -q -childArray $StubbleShelfTab`;

	// delete Stubble Brush tool icons
	for ( $button in $shelfButtons )
	{
	   string $label;

	   // Assert that this is a shelfButton
	   if ( `objectTypeUI -isType "shelfButton" $button` )
	   {
		  deleteUI $button;
	   }
	}

	// create Stubble Select Guides icon
	string $brushButton = 	`shelfButton
				-parent $StubbleShelfTab  // Set parent Shelf as "Custom"
				-enable 1
				-width 34
				-height 34
				-manage 1
				-visible 1
				-annotation "Stubble: Select Guides"
				-label "Select Guides"
				-image1 "stubble_guides_selection.png"
				-style "iconOnly"
				-command "optionVar -iv \"stubbleSelectionMode\" 1;refresh;"`;

	// create Stubble Select Vertices icon
	string $brushButton = 	`shelfButton
				-parent $StubbleShelfTab  // Set parent Shelf as "Custom"
				-enable 1
				-width 34
				-height 34
				-manage 1
				-visible 1
				-annotation "Stubble: Select Vertices"
				-label "Select Vertices"
				-image1 "stubble_vertices_selection.png"
				-style "iconOnly"
				-command "optionVar -iv \"stubbleSelectionMode\" 2;refresh;"`;
				
	// create Stubble Select Tips icon
	string $brushButton = 	`shelfButton
				-parent $StubbleShelfTab  // Set parent Shelf as "Custom"
				-enable 1
				-width 34
				-height 34
				-manage 1
				-visible 1
				-annotation "Stubble: Select Tips"
				-label "Select Tips"
				-image1 "stubble_tips_selection.png"
				-style "iconOnly"
				-command "optionVar -iv \"stubbleSelectionMode\" 3;refresh;"`;

	// create Stubble Select Roots icon
	string $brushButton = 	`shelfButton
				-parent $StubbleShelfTab  // Set parent Shelf as "Custom"
				-enable 1
				-width 34
				-height 34
				-manage 1
				-visible 1
				-annotation "Stubble: Select Roots"
				-label "Select Roots"
				-image1 "stubble_roots_selection.png"
				-style "iconOnly"
				-command "optionVar -iv \"stubbleSelectionMode\" 4;refresh;"`;

	// create Stubble Brush tool icon
	string $brushButton = 	`shelfButton
				-parent $StubbleShelfTab  // Set parent Shelf as "Custom"
				-enable 1
				-width 34
				-height 34
				-manage 1
				-visible 1
				-annotation "Stubble Brush tool"
				-label "Stubble Brush tool"
				-image1 "stubble_hair_brush.png"
				-style "iconOnly"
				-command "toolPropertyWindow; setToolTo stubbleBrushTool"`;

	// create Stubble Cut tool icon
	string $cutButton = 	`shelfButton
				-parent $StubbleShelfTab  // Set parent Shelf as "Custom"
				-enable 1
				-width 34
				-height 34
				-manage 1
				-visible 1
				-annotation "Stubble Cut tool"
				-label "Stubble Cut tool"
				-image1 "stubble_scissors.png"
				-style "iconOnly"
				-command "toolPropertyWindow; setToolTo stubbleCutTool"`;

	// create Stubble haptic tool icon
	string $hapticButton = 	`shelfButton
				-parent $StubbleShelfTab  // Set parent Shelf as "Custom"
				-enable 1
				-width 34
				-height 34
				-manage 1
				-visible 1
				-annotation "Stubble haptic settings tool"
				-label "Stubble haptic settings tool"
				-image1 "hypergraph.png"
				-style "iconOnly"
				-command "setToolTo StubbleHapticSettingsToolContext1"`;

	// create Stubble Undo icon
	string $brushButton = 	`shelfButton
				-parent $StubbleShelfTab  // Set parent Shelf as "Custom"
				-enable 1
				-width 34
				-height 34
				-manage 1
				-visible 1
				-annotation "Stubble Undo"
				-label "Stubble Undo"
				-image1 "stubble_arrow_undo.png"
				-style "iconOnly"
				-command "StubbleUndoCommand;refresh;"`;
	
	// create Stubble Redo icon
	string $brushButton = 	`shelfButton
				-parent $StubbleShelfTab  // Set parent Shelf as "Custom"
				-enable 1
				-width 34
				-height 34
				-manage 1
				-visible 1
				-annotation "Stubble Redo"
				-label "Stubble Redo"
				-image1 "stubble_arrow_redo.png"
				-style "iconOnly"
				-command "StubbleRedoCommand;refresh;"`;

	// enable rendering with 3Delight
	print ( "Stubble: Enabling rendering with 3Delight.\n" );
	source Stubble3DelightRendering.mel;

	// asssociate keyboard shortcuts
	source StubbleHotkeys.mel;

	print ( "Stubble: Initialization completed.\n" );
}
