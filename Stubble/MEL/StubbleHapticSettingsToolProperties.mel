global proc StubbleHapticSettingsToolProperties ()
{
	if( !`control -exists StubbleHapticSettingsToolLayout` )
	{
		setUITemplate -pushTemplate OptionsTemplate;

		string $parent = `toolPropertyWindow -query -location`;
		setParent $parent;

		columnLayout StubbleHapticSettingsToolLayout;
			frameLayout -collapsable true -collapse false -l "Stubble Haptic Settings Tool Options" StubbleHapticSettingsToolFrame;
				columnLayout StubbleHapticSettingsToolOptions;
					
					$parent = `setParent -query`;

					separator -style "none";
				
					text -label "Available haptic devices:" -align "left";

					textScrollList
						-height 50
						-doubleClickCommand "manageHapticDevices"
						hapticDevices;
							
					intSliderGrp
						-label "I/O frequency [Hz]"
						-minValue 10
						-maxValue 1000
						-value 100
						-cc "StubbleHapticSettingsToolCommand -e -fr `intSliderGrp -q -v stubbleHapticThreadFreq` StubbleHapticSettingsToolContext1"
						stubbleHapticThreadFreq;

					intSliderGrp
						-label "Proxy detail"
						-minValue 2
						-maxValue 32
						-value 8
						-cc "StubbleHapticSettingsToolCommand -e -d `intSliderGrp -q -v stubbleProxyDetail` StubbleHapticSettingsToolContext1"
						stubbleProxyDetail;

					checkBoxGrp
						-label "Interactive mode"
						-numberOfCheckBoxes 1
						-l1 " "
						-value1 true
						-cc "StubbleHapticSettingsToolCommand -e -ib `checkBoxGrp -q -v1 stubbleInteractiveBrushing` StubbleHapticSettingsToolContext1"
						stubbleInteractiveBrushing;

					checkBoxGrp
						-label "Simulate 5-DOF device"
						-numberOfCheckBoxes 1
						-l1 " "
						-cc "StubbleHapticSettingsToolCommand -e -s `checkBoxGrp -q -v1 stubbleEnable5dof` StubbleHapticSettingsToolContext1"
						stubbleEnable5dof;

					checkBoxGrp
						-label "Show XZ-plane helper"
						-numberOfCheckBoxes 1
						-l1 " "
						-value1 true
						-cc "StubbleHapticSettingsToolCommand -e -h `checkBoxGrp -q -v1 stubbleHapticHelper` StubbleHapticSettingsToolContext1"
						stubbleHapticHelper;

					checkBoxGrp
						-label "Brushing spring force"
						-numberOfCheckBoxes 1
						-l1 " "
						-cc "StubbleHapticSettingsToolCommand -e -fs `checkBoxGrp -q -v1 stubbleDamperSpring` StubbleHapticSettingsToolContext1"
						stubbleDamperSpring;

					checkBoxGrp
						-label "Collision detection"
						-numberOfCheckBoxes 1
						-l1 " "
						-cc "StubbleHapticSettingsToolCommand -e -cd `checkBoxGrp -q -v1 stubbleHapticCollisionDetection` StubbleHapticSettingsToolContext1"
						stubbleHapticCollisionDetection;

					checkBoxGrp
						-label "Collision force rendering"
						-numberOfCheckBoxes 1
						-l1 " "
						-cc "StubbleHapticSettingsToolCommand -e -r `checkBoxGrp -q -v1 stubbleHapticRendering` StubbleHapticSettingsToolContext1"
						stubbleHapticRendering;

					intSliderGrp
						-label "Force mag. ratio [%]"
						-minValue 1
						-maxValue 100
						-value 30
						-cc "StubbleHapticSettingsToolCommand -e -mr `intSliderGrp -q -v stubbleForceMagnitude` StubbleHapticSettingsToolContext1"
						stubbleForceMagnitude;

				setParent ..;
			setParent ..;
		setParent ..;

		setUITemplate -popTemplate;
	}
}


global proc manageHapticDevices()
{
	print "manageHapticDevices: ";
	string $objectToSelect[] = `textScrollList -q -si hapticDevices`;
	for ($ots in $objectToSelect) StubbleHapticSettingsToolCommand -e -i $ots StubbleHapticSettingsToolContext1;
	print "\n";
}
